Answer1 :

def is_disarium_number(number):
    # Convert the number to a string
    number_str = str(number)

    # Calculate the sum of digits raised to their respective positions
    sum_of_digits = 0
    for i in range(len(number_str)):
        digit = int(number_str[i])
        sum_of_digits += digit ** (i+1)

    # Check if the sum is equal to the original number
    if sum_of_digits == number:
        return True
    else:
        return False


# Example usage
number = 175

if is_disarium_number(number):
    print(number, "is a Disarium number")
else:
    print(number, "is not a Disarium number")

Answer2 :
def is_disarium_number(number):
    # Convert the number to a string
    number_str = str(number)

    # Calculate the sum of digits raised to their respective positions
    sum_of_digits = 0
  for i in rang(0,100):
    for i in range(len(number_str)):
        digit = int(number_str[i])
        sum_of_digits += digit ** (i+1)

    # Check if the sum is equal to the original number
    if sum_of_digits == number:
        return True
    else:
        return False


# Example usage
number = 175

if is_disarium_number(number):
    print(number, "is a Disarium number")
else:
    print(number, "is not a Disarium number")

Answer : Happy Number

def is_happy_number(number):
    # Define a set to store previously seen numbers
    seen_numbers = set()

    while number != 1:
        # Convert the number to a string
        number_str = str(number)

        # Calculate the sum of squares of digits
        sum_of_squares = 0
        for digit in number_str:
            square = int(digit) ** 2
            sum_of_squares += square

        # Check if the sum is in the set of seen numbers
        if sum_of_squares in seen_numbers:
            return False
        else:
            seen_numbers.add(sum_of_squares)

        number = sum_of_squares

    return True


# Example usage
number = 19

if is_happy_number(number):
    print(number, "is a Happy number")
else:
    print(number, "is not a Happy number")


Answer4:

def is_happy_number(number):
    seen_numbers = set()

    while number != 1:
        number_str = str(number)
        sum_of_squares = 0
        for digit in number_str:
            square = int(digit) ** 2
            sum_of_squares += square

        if sum_of_squares in seen_numbers:
            return False
        else:
            seen_numbers.add(sum_of_squares)

        number = sum_of_squares

    return True


# Print all Happy numbers between 1 and 100
print("Happy numbers between 1 and 100:")
for number in range(1, 101):
    if is_happy_number(number):
        print(number)


Answer 5:
def is_harshad_number(number):
    # Convert the number to a string
    number_str = str(number)

    # Calculate the sum of digits
    sum_of_digits = sum(int(digit) for digit in number_str)

    # Check if the number is divisible by the sum of digits
    if number % sum_of_digits == 0:
        return True
    else:
        return False


# Example usage
number = 18

if is_harshad_number(number


Answer6:

def is_harshad_number(number):
    # Convert the number to a string
    number_str = str(number)

    # Calculate the sum of digits
    sum_of_digits = sum(int(digit) for digit in number_str)

    # Check if the number is divisible by the sum of digits
    if number % sum_of_digits == 0:
        return True
    else:
        return False


# Example usage
number = 18

if is_harshad_number(number):
    print(number, "is a Harshad number")
else:
    print(number, "is not a Harshad number")

