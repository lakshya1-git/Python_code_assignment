QUestion 1- 
Please write a program using generator to print the numbers which can be divisible by 5 and
7 between 0 and n in comma separated form while n is input by console.
Example:
If the following n is given as input to the program:
100
Then, the output of the program should be:
0,35,70

Answer 1 - 
def divisible_by_5_and_7(n):
    for num in range(n + 1):
        if num % 5 == 0 and num % 7 == 0:
            yield num
try:
    n = int(input("Enter the value of n: "))
    result = list(divisible_by_5_and_7(n))
    print(",".join(map(str, result)))
except ValueError:
    print("Invalid input. Please enter a valid integer.")

Question 2 - Question 2:
Please write a program using generator to print the even numbers between 0 and n in comma
separated form while n is input by console.
Example:
If the following n is given as input to the program:
10
Then, the output of the program should be:
0,2,4,6,8,10
aNSWER 2 -

def even_numbers(n):
    for num in range(0, n + 1, 2):
        yield num

try:
    n = int(input("Enter the value of n: "))
    result = list(even_numbers(n))
    print(",".join(map(str, result)))
except ValueError:
    print("Invalid input. Please enter a valid integer.")

Question 3:
The Fibonacci Sequence is computed based on the following formula:
f(n)=0 if n=0
f(n)=1 if n=1
f(n)=f(n-1)+f(n-2) if n&gt;1
Please write a program using list comprehension to print the Fibonacci Sequence in comma
separated form with a given n input by console.
Example:
If the following n is given as input to the program:
7

Then, the output of the program should be:
0,1,1,2,3,5,8,13

Answer 3- 
def fibonacci_sequence(n):
    if n == 0:
        return []
    elif n == 1:
        return [0]
    else:
        fib_list = [0, 1]
        while len(fib_list) < n:
            next_fib = fib_list[-1] + fib_list[-2]
            fib_list.append(next_fib)
        return fib_list

try:
    n = int(input("Enter the value of n: "))
    result = fibonacci_sequence(n)
    print(",".join(map(str, result)))
except ValueError:
    print("Invalid input. Please enter a valid integer.")

Question 4:
Assuming that we have some email addresses in the &quot;username@companyname.com&quot; format,
please write program to print the user name of a given email address. Both user names and
company names are composed of letters only.
Example:
If the following email address is given as input to the program:
john@google.com
Then, the output of the program should be:
john

Answer 4 : 

def extract_username(email):
    # Split the email address at the "@" symbol
    parts = email.split("@")
    
    # Check if the email format is valid
    if len(parts) == 2:
        return parts[0]
    else:
        return "Invalid email format"

try:
    email = input("Enter an email address: ")
    username = extract_username(email)
    print(username)
except ValueError:
    print("Invalid input. Please enter a valid email address.")


QUestion 5 - Question 5:
Define a class named Shape and its subclass Square. The Square class has an init function
which takes a length as argument. Both classes have a area function which can print the area
of the shape where Shape&#39;s area is 0 by default.

Answer - class Shape:
    def __init__(self):
        pass  # Shape has no specific attributes, so the constructor is empty

    def area(self):
        return 0  # Default area for a generic shape is 0

class Square(Shape):
    def __init__(self, length):
        super().__init__()  # Call the constructor of the base class (Shape)
        self.length = length  # Initialize the length attribute

    def area(self):
        return self.length * self.length  # Calculate the area of the square
shape = Shape()
square = Square(5)
print("Area of the generic shape:", shape.area())  # Should print 0
print("Area of the square:", square.area())        # Should print 25 (5 * 5)
