Answer 1 - def is_symmetrical(num):
    # Convert the number to a string
    num_str = str(num)
    
    # Reverse the string
    reversed_str = num_str[::-1]
    
    # Compare the original string with the reversed string
    return num_str == reversed_str

Question 2
Given a string of numbers separated by a comma and space, return the product of the
numbers.

Answer 2 -
def multiply_nums(numbers_str):
    
    num_str_list = numbers_str.split(', ')
    
    
    product = 1
    
    
    for num_str in num_str_list:
        
        product *= int(num_str)
    
    return product

Question3 - Create a function that squares every digit of a number.  Notes
The function receives an integer and must return an integer.

Answer 3 -def square_digits(number):
    # Convert the number to a string
    num_str = str(number)
    
    # Initialize an empty string to store the squared digits
    squared_str = ""
    
    
    for digit in num_str:
        
        squared_digit = str(int(digit) ** 2)
        
        # Append the squared digit to the result string
        squared_str += squared_digit
    
 
    result = int(squared_str)
    
    return result

# Test cases
print(square_digits(9119))  # ➞ 811181
print(square_digits(1234))  # ➞ 14916
print(square_digits(0))     # ➞ 0


Question 4 - Create a function that sorts a list and removes all duplicate items from it.

Answer - 
def sort_and_remove_duplicates(input_list):
    # Sort the input list
    sorted_list = sorted(input_list)
    
    # Initialize a new list to store unique items
    unique_list = []
    
    # Iterate through the sorted list
    for item in sorted_list:
        # If the item is not already in the unique list, add it
        if item not in unique_list:
            unique_list.append(item)
    
    return unique_list

# Test cases
original_list = [3, 1, 3, 5, 2, 2, 4]
sorted_unique_list = sort_and_remove_duplicates(original_list)
print(sorted_unique_list)  # ➞ [1, 2, 3, 4, 5]


QUestion 5 - Create a function that returns the mean of all digits.   The mean of all digits is the sum of digits / how many digits there are (e.g. mean of digits in
512 is (5+1+2)/3(number of digits) = 8/3=2).

ANswer5 - def mean_of_digits(number):
    # Convert the number to a string to easily access its digits
    num_str = str(number)
    
    # Initialize variables to store the sum of digits and the number of digits
    digit_sum = 0
    num_digits = len(num_str)
    
    # Iterate through the digits of the number
    for digit in num_str:
        # Convert each digit back to an integer and add it to the sum
        digit_sum += int(digit)
    
    # Calculate the mean by dividing the sum by the number of digits
    mean = digit_sum // num_digits
    
    return mean

# Test cases
print(mean_of_digits(512))  # ➞ 2
print(mean_of_digits(12345))  # ➞ 3
print(mean_of_digits(999))  # ➞ 9
