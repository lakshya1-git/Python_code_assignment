Answer1- 
def filter_list(lst):
    return [x for x in lst if isinstance(x, int)]

# Test cases
print(filter_list([1, 2, 3, "a", "b", 4]))  # ➞ [1, 2, 3, 4]
print(filter_list(["A", 0, "Edabit", 1729, "Python", "1729"]))  # ➞ [0, 1729]
print(filter_list(["Nothing", "here"]))  # ➞ []


Answer2-

def add_indexes(lst):
    return [i + val for i, val in enumerate(lst)]

# Test cases
print(add_indexes([0, 0, 0, 0, 0]))  # ➞ [0, 1, 2, 3, 4]
print(add_indexes([1, 2, 3, 4, 5]))  # ➞ [1, 3, 5, 7, 9]
print(add_indexes([5, 4, 3, 2, 1]))  # ➞ [5, 5, 5, 5, 5]


Answer3-
import math

def cone_volume(height, radius):
    if radius == 0:
        return 0
    volume = (1/3) * math.pi * radius**2 * height
    return round(volume, 2)

# Test cases
print(cone_volume(3, 2))  # ➞ 12.57
print(cone_volume(15, 6))  # ➞ 565.49
print(cone_volume(18, 0))  # ➞ 0




Answer3-



import math

def cone_volume(height, radius):
    if radius == 0:
        return 0
    volume = (1/3) * math.pi * radius**2 * height
    return round(volume, 2)

# Test cases
print(cone_volume(3, 2))  # ➞ 12.57
print(cone_volume(15, 6))  # ➞ 565.49
print(cone_volume(18, 0))  # ➞ 0

Answer4- 
def triangle(n):
    if n <= 0:
        return 0
    return (n * (n + 1)) // 2

# Test cases
print(triangle(1))    # ➞ 1
print(triangle(6))    # ➞ 21
print(triangle(215))  # ➞ 23220



Answer5-

def missing_num(lst):
    full_sum = sum(range(1, 11))  # Calculate the sum of numbers from 1 to 10
    given_sum = sum(lst)  # Calculate the sum of the given list
    return full_sum - given_sum

# Test cases
print(missing_num([1, 2, 3, 4, 6, 7, 8, 9, 10]))  # ➞ 5
print(missing_num([7, 2, 3, 6, 5, 9, 1, 4, 8]))  # ➞ 10
print(missing_num([10, 5, 1, 2, 4, 6, 8, 3, 9]))  # ➞ 7
